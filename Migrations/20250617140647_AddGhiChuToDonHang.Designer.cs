// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawVerse.Data;

#nullable disable

namespace PawVerse.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250617140647_AddGhiChuToDonHang")]
    partial class AddGhiChuToDonHang
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PawVerse.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdPhanQuyen")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdPhanQuyen");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PawVerse.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("IdChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChiTietDonHang"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDonHang")
                        .HasColumnType("int");

                    b.Property<int>("IdDonHangNavigationIdDonHang")
                        .HasColumnType("int");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("IdSanPhamNavigationIdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdChiTietDonHang")
                        .HasName("PK__ChiTietD__2B84021AB271F01E");

                    b.HasIndex("IdDonHangNavigationIdDonHang");

                    b.HasIndex("IdSanPhamNavigationIdSanPham");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("PawVerse.Models.Coupon", b =>
                {
                    b.Property<int>("IdCoupon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCoupon"));

                    b.Property<string>("LoaiGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MucGiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateOnly>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenMaCoupon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Hoạt động");

                    b.HasKey("IdCoupon")
                        .HasName("PK__Coupon__BB3EF106E11088BE");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("PawVerse.Models.DanhMuc", b =>
                {
                    b.Property<int>("IdDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDanhMuc"));

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Đang bán");

                    b.HasKey("IdDanhMuc")
                        .HasName("PK__DanhMuc__662ACB01C03355F0");

                    b.ToTable("DanhMucs");
                });

            modelBuilder.Entity("PawVerse.Models.DanhSachYeuThich", b =>
                {
                    b.Property<int>("IdYeuThich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdYeuThich"));

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("NgayThem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdYeuThich")
                        .HasName("PK__DanhSach__F37790DE2D983BEB");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdSanPham");

                    b.ToTable("DanhSachYeuThiches");
                });

            modelBuilder.Entity("PawVerse.Models.DonHang", b =>
                {
                    b.Property<int>("IdDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDonHang"));

                    b.Property<string>("DiaChiGiaoHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCoupon")
                        .HasColumnType("int");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdVanChuyen")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDatHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayGiaoHangDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHuy")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Chờ xử lý");

                    b.HasKey("IdDonHang")
                        .HasName("PK__DonHang__99B726395D42AA64");

                    b.HasIndex("IdCoupon");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdVanChuyen");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("PawVerse.Models.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("PawVerse.Models.GioHangChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GioHangId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("GioHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("PawVerse.Models.LichSuMuaHang", b =>
                {
                    b.Property<int>("IdLichSu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLichSu"));

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayMua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SanPhamIdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdLichSu")
                        .HasName("PK__LichSuMu__156319B5C9A61419");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("SanPhamIdSanPham");

                    b.ToTable("LichSuMuaHangs");
                });

            modelBuilder.Entity("PawVerse.Models.NhaCungCap", b =>
                {
                    b.Property<int>("IdNhaCungCap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNhaCungCap"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoNcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiLienLac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Hoạt động");

                    b.HasKey("IdNhaCungCap")
                        .HasName("PK__NhaCungC__D1E6E45E02447FD4");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("PawVerse.Models.PhanQuyen", b =>
                {
                    b.Property<int>("IdPhanQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhanQuyen"));

                    b.Property<string>("Quyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhanQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPhanQuyen")
                        .HasName("PK__PhanQuye__639A42B6B311B94B");

                    b.ToTable("PhanQuyens");
                });

            modelBuilder.Entity("PawVerse.Models.SanPham", b =>
                {
                    b.Property<int>("IdSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSanPham");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSanPham"));

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GiaBan");

                    b.Property<decimal?>("GiaKhuyenMai")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GiaKhuyenMai");

                    b.Property<decimal>("GiaVon")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GiaVon");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2")
                        .HasColumnName("HanSuDung");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HinhAnh");

                    b.Property<int>("IdDanhMuc")
                        .HasColumnType("int")
                        .HasColumnName("IdDanhMuc");

                    b.Property<int>("IdDanhMucNavigationIdDanhMuc")
                        .HasColumnType("int")
                        .HasColumnName("IdDanhMucNavigationIdDanhMuc");

                    b.Property<int>("IdThuongHieu")
                        .HasColumnType("int")
                        .HasColumnName("IdThuongHieu");

                    b.Property<int>("IdThuongHieuNavigationIdThuongHieu")
                        .HasColumnType("int")
                        .HasColumnName("IdThuongHieuNavigationIdThuongHieu");

                    b.Property<string>("MauSac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MauSac");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MoTa");

                    b.Property<DateTime>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayCapNhat")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgaySanXuat");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayTao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SoLanXem")
                        .HasColumnType("int")
                        .HasColumnName("SoLanXem");

                    b.Property<int>("SoLuongDaBan")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongDaBan");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongTonKho");

                    b.Property<string>("TenAlias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenAlias");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenSanPham");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Còn hàng")
                        .HasColumnName("TrangThai");

                    b.Property<string>("TrongLuong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrongLuong");

                    b.Property<string>("XuatXu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("XuatXu");

                    b.HasKey("IdSanPham")
                        .HasName("PK__SanPham__617EA392A9EA29D6");

                    b.HasIndex("IdDanhMuc");

                    b.HasIndex("IdDanhMucNavigationIdDanhMuc");

                    b.HasIndex("IdThuongHieu");

                    b.HasIndex("IdThuongHieuNavigationIdThuongHieu");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("PawVerse.Models.ThuongHieu", b =>
                {
                    b.Property<int>("IdThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThuongHieu"));

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Hoạt động");

                    b.HasKey("IdThuongHieu")
                        .HasName("PK__ThuongHi__AB2A011AE4E220AB");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("PawVerse.Models.VanChuyen", b =>
                {
                    b.Property<int>("IdVanChuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVanChuyen"));

                    b.Property<string>("Duong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhiVanChuyen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVanChuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianGiaoHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVanChuyen")
                        .HasName("PK__VanChuye__626CD04B88CEB2AF");

                    b.ToTable("VanChuyens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawVerse.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawVerse.Models.ApplicationUser", b =>
                {
                    b.HasOne("PawVerse.Models.PhanQuyen", "PhanQuyen")
                        .WithMany()
                        .HasForeignKey("IdPhanQuyen")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PhanQuyen");
                });

            modelBuilder.Entity("PawVerse.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("PawVerse.Models.DonHang", "IdDonHangNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("IdDonHangNavigationIdDonHang")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietDo__ID_Do__71D1E811");

                    b.HasOne("PawVerse.Models.SanPham", "IdSanPhamNavigation")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("IdSanPhamNavigationIdSanPham")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietDo__ID_Sa__72C60C4A");

                    b.Navigation("IdDonHangNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("PawVerse.Models.DanhSachYeuThich", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", "IdNguoiDungNavigation")
                        .WithMany("DanhSachYeuThiches")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__DanhSachY__ID_Ng__778AC167");

                    b.HasOne("PawVerse.Models.SanPham", "IdSanPhamNavigation")
                        .WithMany("DanhSachYeuThiches")
                        .HasForeignKey("IdSanPham")
                        .IsRequired()
                        .HasConstraintName("FK__DanhSachY__ID_Sa__787EE5A0");

                    b.Navigation("IdNguoiDungNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("PawVerse.Models.DonHang", b =>
                {
                    b.HasOne("PawVerse.Models.Coupon", "IdCouponNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("IdCoupon")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__DonHang__ID_Coup__6E01572D");

                    b.HasOne("PawVerse.Models.ApplicationUser", "IdNguoiDungNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("FK__DonHang__ID_Nguo__6D0D32F4");

                    b.HasOne("PawVerse.Models.VanChuyen", "IdVanChuyenNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("IdVanChuyen")
                        .IsRequired()
                        .HasConstraintName("FK__DonHang__ID_VanC__6EF57B66");

                    b.Navigation("IdCouponNavigation");

                    b.Navigation("IdNguoiDungNavigation");

                    b.Navigation("IdVanChuyenNavigation");
                });

            modelBuilder.Entity("PawVerse.Models.GioHang", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawVerse.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("PawVerse.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawVerse.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("PawVerse.Models.LichSuMuaHang", b =>
                {
                    b.HasOne("PawVerse.Models.ApplicationUser", "IdNguoiDungNavigation")
                        .WithMany("LichSuMuaHangs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawVerse.Models.SanPham", "IdSanPhamNavigation")
                        .WithMany()
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LichSuMua__ID_Sa__7D439ABD");

                    b.HasOne("PawVerse.Models.SanPham", null)
                        .WithMany("LichSuMuaHangs")
                        .HasForeignKey("SanPhamIdSanPham");

                    b.Navigation("IdNguoiDungNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("PawVerse.Models.SanPham", b =>
                {
                    b.HasOne("PawVerse.Models.DanhMuc", "IdDanhMucNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdDanhMuc")
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__ID_Danh__5812160E");

                    b.HasOne("PawVerse.Models.DanhMuc", "IdDanhMucNavigationIdDanhMucNavigation")
                        .WithMany()
                        .HasForeignKey("IdDanhMucNavigationIdDanhMuc")
                        .IsRequired()
                        .HasConstraintName("FK_SanPham_DanhMuc_Extra");

                    b.HasOne("PawVerse.Models.ThuongHieu", "IdThuongHieuNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdThuongHieu")
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__ID_Thuo__59063A47");

                    b.HasOne("PawVerse.Models.ThuongHieu", "IdThuongHieuNavigationIdThuongHieuNavigation")
                        .WithMany()
                        .HasForeignKey("IdThuongHieuNavigationIdThuongHieu")
                        .IsRequired()
                        .HasConstraintName("FK_SanPham_ThuongHieu_Extra");

                    b.Navigation("IdDanhMucNavigation");

                    b.Navigation("IdDanhMucNavigationIdDanhMucNavigation");

                    b.Navigation("IdThuongHieuNavigation");

                    b.Navigation("IdThuongHieuNavigationIdThuongHieuNavigation");
                });

            modelBuilder.Entity("PawVerse.Models.ApplicationUser", b =>
                {
                    b.Navigation("DanhSachYeuThiches");

                    b.Navigation("DonHangs");

                    b.Navigation("LichSuMuaHangs");
                });

            modelBuilder.Entity("PawVerse.Models.Coupon", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("PawVerse.Models.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("PawVerse.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("PawVerse.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("PawVerse.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("DanhSachYeuThiches");

                    b.Navigation("LichSuMuaHangs");
                });

            modelBuilder.Entity("PawVerse.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("PawVerse.Models.VanChuyen", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
