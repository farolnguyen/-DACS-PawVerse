@model PawVerse.Areas.Admin.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Đặt lại mật khẩu";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutV2.cshtml";
}

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">Trang chủ</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Account" asp-action="Index">Quản lý người dùng</a></li>
        <li class="breadcrumb-item active" aria-current="page">Đặt lại mật khẩu</li>
    </ol>
</nav>

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Đặt lại mật khẩu</h4>
            </div>
            <div class="card-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Bạn đang đặt lại mật khẩu cho tài khoản <strong>@Model.UserName</strong> (@Model.Email).
                </div>
                
                <!-- Display validation summary -->
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                
                <form asp-area="Admin" asp-controller="Account" asp-action="ChangePassword" method="post" id="changePasswordForm">
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="Email" />
                    <input type="hidden" asp-for="UserName" />
                    
                    <div class="form-group mb-3">
                        <label asp-for="NewPassword" class="form-label">Mật khẩu mới</label>
                        <div class="input-group">
                            <input asp-for="NewPassword" class="form-control" id="newPassword" autocomplete="new-password" />
                            <button class="btn btn-outline-secondary toggle-password" type="button" data-target="newPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <div class="form-text">Mật khẩu phải có ít nhất 6 ký tự.</div>
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group mb-4">
                        <label asp-for="ConfirmPassword" class="form-label">Xác nhận mật khẩu mới</label>
                        <div class="input-group">
                            <input asp-for="ConfirmPassword" class="form-control" id="confirmPassword" autocomplete="new-password" />
                            <button class="btn btn-outline-secondary toggle-password" type="button" data-target="confirmPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <a asp-area="Admin" asp-controller="Account" asp-action="Index" class="btn btn-secondary me-md-2">
                            <i class="fas fa-times me-1"></i> Hủy
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Lưu mật khẩu mới
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Function to check password strength
        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 6) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^a-zA-Z0-9]/.test(password)) strength++;
            return strength;
        }

        $(document).ready(function() {
            // Toggle password visibility
            $(document).on('click', '.toggle-password', function() {
                const target = $(this).data('target');
                const input = $('#' + target);
                const icon = $(this).find('i');
                
                if (input.attr('type') === 'password') {
                    input.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    input.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

            // Client-side validation
            $('#changePasswordForm').on('submit', function(e) {
                const form = $(this);
                
                // Clear previous error messages
                $('.text-danger').text('');
                $('.is-invalid').removeClass('is-invalid');
                
                // Validate password match
                const newPassword = $('#NewPassword').val();
                const confirmPassword = $('#ConfirmPassword').val();
                
                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    $('#ConfirmPassword').addClass('is-invalid');
                    $('span[data-valmsg-for="ConfirmPassword"]').text('Mật khẩu xác nhận không khớp.');
                    return false;
                }
                
                // Check password strength
                const strength = checkPasswordStrength(newPassword);
                if (strength < 3) {
                    if (!confirm('Mật khẩu hiện tại khá yếu. Bạn có chắc chắn muốn tiếp tục?')) {
                        e.preventDefault();
                        return false;
                    }
                }
                
                // Show loading state
                const submitBtn = form.find('button[type="submit"]');
                submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang xử lý...');
                
                return true;
            });
            
            // Show toast messages if any
            const successMessage = '@(TempData["SuccessMessage"] as string)';
            const errorMessage = '@(TempData["ErrorMessage"] as string)';
            
            if (successMessage) {
                toastr.success(successMessage, 'Thành công');
            }
            
            if (errorMessage) {
                toastr.error(errorMessage, 'Lỗi');
            }
        });
    </script>
}
